apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "xcache.fullname" . }}
  labels:
    app: {{ template "xcache.name" . }}
    chart: {{ template "xcache.chart" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "xcache.name" . }}
      chart: {{ template "xcache.chart" . }}
      release: {{ .Release.Name }}
      instance: {{ .Values.Instance }}
    
  template:
    metadata:
      labels:
        app: {{ template "xcache.name" . }}
        chart: {{ template "xcache.chart" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance }}
    spec:

      nodeSelector:
        xcache-capable: "true"
      
      tolerations:
      - key: "special"
        operator: "Exists"
        effect: PreferNoSchedule

      volumes:
      - name: x509-data
        emptyDir: {}
      - name: x509-certs-volume
        secret:
          secretName: xcache-cert-secret
          items:
          - key: userkey
            path: userkey.pem
            mode: 256 
          - key: usercert
            path: usercert.pem
      {{- range $index, $dir := .Values.XCacheConfig.CacheDirectories }}
      - name: xcache-data-{{ $index }}
        hostPath:
          path: {{ $dir }}
      {{- end }}
      - name: xcache-meta
        hostPath:
          path: {{ .Values.XCacheConfig.MetaDirectory }}
      
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: XC_SPACE_HIGH_WM
            value: "{{ .Values.XCacheConfig.HighWaterMark }}"
          - name: XC_SPACE_LOW_WM
            value: "{{ .Values.XCacheConfig.LowWaterMark }}"
          - name: XC_PORT
            value: "{{ .Values.Service.Port }}"
          - name: XC_RAMSIZE
            value: "{{ .Values.XCacheConfig.RamSize }}"
          - name: XC_BLOCKSIZE
            value: "{{ .Values.XCacheConfig.BlockSize }}"
          - name: XC_PREFETCH
            value: "{{ .Values.XCacheConfig.Prefetch }}"
          - name: AGIS_PROTOCOL_ID
            value: "{{ .Values.SiteConfig.AGISprotocolID }}"
          - name: WQ_BLOCKS_PER_LOOP
            value: "{{ .Values.XCacheConfig.WQBlocksPerLoop }}"
          - name: WQ_THREADS
            value: "{{ .Values.XCacheConfig.WQThreads }}"
          resources:
            requests:
              ephemeral-storage: "5Gi"
            limits:
              ephemeral-storage: "10Gi"
          livenessProbe:
            tcpSocket:
              port: {{ .Values.Service.Port }}
            initialDelaySeconds: 180
            periodSeconds: 60
          lifecycle:
            preStop:
              exec:
                command: ["./updateAGISstatus.sh","{{ .Values.SiteConfig.AGISprotocolID }}","DISABLED"]
          ports:
            - containerPort: {{ .Values.Service.Port }}         
          volumeMounts:
          - name: x509-data
            mountPath: "/etc/proxy/"
            readOnly: true
          - name: x509-certs-volume
            mountPath: "/etc/grid-certs/"
            readOnly: true
          {{- range $nindex, $ndir := .Values.XCacheConfig.CacheDirectories }}
          - name: xcache-data-{{ $nindex }}
            mountPath: "/xcache-data_{{ $nindex }}"
          {{- end }}
          - name: xcache-meta
            mountPath: "/xcache-meta"

        - name: x509
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["/run_x509_updater.sh"]
          resources:
            requests:
              ephemeral-storage: "1Gi"
          volumeMounts:
          - name: x509-data
            mountPath: "/etc/proxy/"
            readOnly: false
          - name: x509-certs-volume
            mountPath: "/etc/grid-certs/"
            readOnly: true

        - name: reporter
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["/run_cache_reporter.sh"]
          env:
          - name: XC_SITE
            value: "{{ .Values.SiteConfig.Name }}"
          - name: XC_REPORT_COLLECTOR
            value: "{{ .Values.Monitoring.Collector }}"
          volumeMounts:
          - name: xcache-meta
            mountPath: "/xcache-meta"
            readOnly: true