set eRAMSIZE=$XC_RAMSIZE
set eSPACELOWWM=$XC_SPACE_LOW_WM
set eSPACEHIGHWM=$XC_SPACE_HIGH_WM 
set eBLOCKSIZE=$XC_BLOCKSIZE
set ePREFETCH=$XC_PREFETCH

# what is default? is it reasonable?
all.adminpath /data/xrd/var/spool/xrootd
all.pidpath   /data/xrd/var/run/xrootd

# not needed for cache? http://xrootd.org/doc/dev49/ofs_config.htm#_Toc522916545
oss.localroot  /data/xrd/namespace 

# http://xrootd.org/doc/dev49/ofs_config.htm#_Toc522916544
all.export /atlas/rucio
all.export /root:/
all.export /xroot:/

# http://xrootd.org/doc/dev49/ofs_config.htm#_Toc522916548
oss.space meta /cache/xrdcinfos
oss.space data /cache/datafiles

# Load the proxy plugin and the disk caching plugin.
ofs.osslib   /usr/lib64/libXrdPss.so
pss.cachelib /usr/lib64/libXrdFileCache.so

# number of processing streams for stat call (default is 512)
# pss.config streams 128

# this is arbitrary as our client will provide origin 
pss.origin =

# http://xrootd.org/doc/dev49/ofs_config.htm#_Toc522916555
pss.namelib -lfncache -lfn2pfn /usr/lib64/XrdName2NameDCP4RUCIO.so

pfc.ram $eRAMSIZE
pfc.diskusage $eSPACELOWWM $eSPACEHIGHWM 
pfc.spaces data meta
pfc.blocksize $eBLOCKSIZE
pfc.prefetch $ePREFETCH
pfc.trace info

# Uncomment the following and bind mount to /etc/xrootd/xcache.cfg to request GSI security from client
#xrootd.seclib /usr/lib64/libXrdSec.so
#sec.protparm gsi -vomsfun:/usr/lib64/libXrdSecgsiVOMS.so -vomsfunparms:certfmt=raw|vos=atlas|grps=/atlas
#sec.protocol /usr/lib64 gsi -ca:1 -crl:3
#acc.authdb /etc/xrootd/auth_db
#acc.authrefresh 60
#ofs.authorize
